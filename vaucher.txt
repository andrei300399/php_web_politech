SELECT * from product as p inner join productorder as po on p.id=po.idProduct 
inner join `order` as o on po.idOrder=o.id;

SELECT idOrder, sum(p.price*po.amountProduct) from product as p inner join productorder as po on p.id=po.idProduct GROUP by po.idOrder


CREATE or replace view allinfo as SELECT price, p.name as productName, price*amountProduct as sumProduct, idOrder, c.name as categoryName, po.amountProduct, o.code, o.orderDate, o.deliviryDate from product as p inner join productorder as po on p.id=po.idProduct 
inner join `order` as o on po.idOrder=o.id inner join `caregory` as c on c.id=p.idCategory;

CREATE or replace view shortsuminfo as SELECT idOrder, sum(sumProduct) as sumorder, a.code, orderDate, deliviryDate from allinfo as a GROUP by idOrder


CREATE PROCEDURE `update_product_info`(IN `idOrd` INT(8), IN `idProd` INT(8), IN `amountProd` INT(8)) 
NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER BEGIN 
INSERT INTO `productorder` (idOrder, idProduct, amountProduct) VALUES (idOrd, idProd, amountProd); 
UPDATE product SET amountStorage = amountStorage - amountProduct WHERE id = idProd; END